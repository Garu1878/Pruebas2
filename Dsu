struct DSU{
    vector<ll> padres,tamano;
    ll grupos;
    DSU(ll n){
        padres.resize(n);
        tamano.resize(n);
        grupos=n;
        iota(padres.begin(),padres.end(),0);
        fill(tamano.begin(),tamano.end(),1);
    }
    ll find(ll w){
        return w==padres[w] ? w : padres[w]=find(padres[w]);
    }
    bool iguales(ll v1,ll v2){
        return (find(v1)==find(v2));
    }
    void amigar(ll v1,ll v2){
        v1=find(v1);
        v2=find(v2);
        if(v1==v2) return;
        padres[v1]=padres[v2];
        tamano[v2]+=tamano[v1];
        grupos--;
    }
    void expandir(){
        grupos++;
        tamano.push_back(1);
        padres.push_back(padres.size());
    }
};
}
